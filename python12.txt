1. In what modes should the PdfFileReader() and PdfFileWriter() File objects be opened?

PdfFileReader() should be opened in binary read mode ('rb').

PdfFileWriter() should be opened in binary write mode ('wb').

2. From a PdfFileReader object, how do you get a Page object for page 5?

You can get a Page object for page 5 using the getPage() method:

python
Copy
page = pdf_reader.getPage(4)  # Page numbers are zero-indexed, so page 5 is index 4.
3. What PdfFileReader variable stores the number of pages in the PDF document?

The numPages variable stores the number of pages in the PDF document:

python
Copy
num_pages = pdf_reader.numPages
4. If a PdfFileReader object’s PDF is encrypted with the password swordfish, what must you do before you can obtain Page objects from it?

You must decrypt the PDF using the decrypt() method with the password:

python
Copy
pdf_reader.decrypt('swordfish')
5. What methods do you use to rotate a page?

You can rotate a page using the rotateClockwise() or rotateCounterClockwise() methods:

python
Copy
page.rotateClockwise(90)  # Rotates the page 90 degrees clockwise.
6. What is the difference between a Run object and a Paragraph object?

A Paragraph object represents a block of text in a Word document, typically ending with a newline or paragraph break.

A Run object represents a contiguous sequence of characters within a paragraph that share the same formatting.

7. How do you obtain a list of Paragraph objects for a Document object that’s stored in a variable named doc?

You can access the list of Paragraph objects using the paragraphs attribute:

python
Copy
paragraphs = doc.paragraphs
8. What type of object has bold, underline, italic, strike, and outline variables?

A Run object has these variables, which control the formatting of the text within the run.

9. What is the difference between False, True, and None for the bold variable?

True: The text is bold.

False: The text is not bold.

None: The text inherits the bold setting from the style hierarchy.

10. How do you create a Document object for a new Word document?

You can create a new Document object using the Document() class from the python-docx library:

python
Copy
from docx import Document
doc = Document()
11. How do you add a paragraph with the text 'Hello, there!' to a Document object stored in a variable named doc?

You can add a paragraph using the add_paragraph() method:

python
Copy
doc.add_paragraph('Hello, there!')
12. What integers represent the levels of headings available in Word documents?

The integers 0 to 9 represent the levels of headings, where:

0 is the title (or top-level heading).

1 is the main heading.

2 to 9 are subheadings of decreasing importance.