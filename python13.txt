1. What advantages do Excel spreadsheets have over CSV spreadsheets?

Formatting: Excel supports rich formatting (e.g., fonts, colors, cell borders, etc.), while CSV is plain text.

Formulas and Functions: Excel allows the use of formulas and built-in functions for calculations.

Multiple Sheets: Excel files can contain multiple sheets, whereas CSV files are limited to a single sheet.

Charts and Visualizations: Excel supports charts, graphs, and other visualizations.

Data Validation: Excel provides data validation features to restrict data entry.

Macros and Automation: Excel supports macros for automating tasks.

2. What do you pass to csv.reader() and csv.writer() to create reader and writer objects?

For csv.reader(), you pass a file object opened in read mode.

For csv.writer(), you pass a file object opened in write mode.

Example:

python
Copy
import csv
# For reading
with open('file.csv', 'r') as file:
    reader = csv.reader(file)

# For writing
with open('file.csv', 'w') as file:
    writer = csv.writer(file)
3. What modes do File objects for reader and writer objects need to be opened in?

For csv.reader(), the file object must be opened in read mode ('r').

For csv.writer(), the file object must be opened in write mode ('w').

4. What method takes a list argument and writes it to a CSV file?

The writerow() method of a csv.writer object takes a list argument and writes it as a row in the CSV file.

Example:

python
Copy
import csv
with open('file.csv', 'w') as file:
    writer = csv.writer(file)
    writer.writerow(['Name', 'Age', 'City'])
5. What do the keyword arguments delimiter and lineterminator do?

delimiter: Specifies the character used to separate fields in the CSV file (default is ,).

lineterminator: Specifies the character used to terminate lines in the CSV file (default is \r\n).

Example:

python
Copy
import csv
with open('file.csv', 'w') as file:
    writer = csv.writer(file, delimiter='\t', lineterminator='\n\n')
6. What function takes a string of JSON data and returns a Python data structure?

The json.loads() function takes a string of JSON data and returns a Python data structure (e.g., dictionary, list).

Example:

python
Copy
import json
json_data = '{"name": "John", "age": 30}'
python_data = json.loads(json_data)
7. What function takes a Python data structure and returns a string of JSON data?

The json.dumps() function takes a Python data structure and returns a string of JSON data.