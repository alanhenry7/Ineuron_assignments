
**Question 1: Create a function that takes a list of non-negative integers and strings and return a new list without the strings.**

```python
def filter_list(lst):
    return [i for i in lst if isinstance(i, int)]

# Test Cases
print(filter_list([1, 2, "a", "b"]))  # [1, 2]
print(filter_list([1, "a", "b", 0, 15]))  # [1, 0, 15]
print(filter_list([1, 2, "aasf", "1", "123", 123]))  # [1, 2, 123]
```

---

**Question 2: The "Reverser" takes a string as input and returns that string in reverse order, with the opposite case.**

```python
def reverse(s):
    return s[::-1].swapcase()

# Test Cases
print(reverse("Hello World"))  # "DLROw OLLEh"
print(reverse("ReVeRsE"))  # "eSrEvEr"
print(reverse("Radar"))  # "RADAr"
```

---

**Question 3: Use destructuring assignment to unpack the list into first, middle, and last variables.**

```python
lst = [1, 2, 3, 4, 5, 6]
first, *middle, last = lst

print(first)  # 1
print(middle)  # [2, 3, 4, 5]
print(last)  # 6
```

---

**Question 4: Write a function that calculates the factorial of a number recursively.**

```python
def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

# Test Cases
print(factorial(5))  # 120
print(factorial(3))  # 6
print(factorial(1))  # 1
print(factorial(0))  # 1
```

---

**Question 5: Write a function that moves all elements of one type to the end of the list.**

```python
def move_to_end(lst, el):
    return [x for x in lst if x != el] + [x for x in lst if x == el]

# Test Cases
print(move_to_end([1, 3, 2, 4, 4, 1], 1))  # [3, 2, 4, 4, 1, 1]
print(move_to_end([7, 8, 9, 1, 2, 3, 4], 9))  # [7, 8, 1, 2, 3, 4, 9]
print(move_to_end(["a", "a", "a", "b"], "a"))  # ["b", "a", "a", "a"]
```
